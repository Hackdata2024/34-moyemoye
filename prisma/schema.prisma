// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id             String           @id
  sessions       Session[]
  googleSub      String           @unique
  username       String
  email          String           @unique
  picture        String
  inviteCode     String           @unique
  requests       Friend[]         @relation("Receiver")
  friends        Friend[]         @relation("Sender")
  points         Points[]
  waterFootprint WaterFootprint[]
}

model Session {
  id        String   @id
  userId    String
  expiresAt DateTime
  user      User     @relation(references: [id], fields: [userId], onDelete: Cascade)

  @@index([userId])
}

// friend request and friend relationship
model Friend {
  id         String       @id @default(nanoid())
  status     FriendStatus @default(PENDING)
  senderId   String
  receiverId String
  sender     User         @relation("Sender", fields: [senderId], references: [id])
  receiver   User         @relation("Receiver", fields: [receiverId], references: [inviteCode])
}

enum FriendStatus {
  PENDING
  ACCEPTED
  REJECTED
  CANCELLED
}

model Points {
  id        String   @id @default(nanoid())
  userId    String
  points    Int
  task      String
  createdAt DateTime @default(now())
  user      User     @relation(fields: [userId], references: [id])
}

model WaterFootprint {
  id        String   @id @default(nanoid())
  userId    String
  footprint Float
  values    Json
  createdAt DateTime @default(now())
  user      User     @relation(fields: [userId], references: [id])
}
